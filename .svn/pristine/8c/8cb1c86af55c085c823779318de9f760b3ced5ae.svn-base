#-*- mode: org -*-
#+STARTUP: showall

* unit testing [0/4]
- [ ] quadratures (integration of non-polynomial function)
- [ ] derivatives (Finite Difference testing)
- [ ] solver (A * (inv(A) * b) == b?)
- [ ] io 

* base/solver [0/2]
- [ ] sparsity Pattern with functions create/append (row field, col field)
- [ ] create solver, based on sparsity pattern

* base/asmb [/]
- [ ] After base/solver/SparsityPattern, use openMP parallel for for assembly

* base/nitsche [1/2]
- [ ] Functionality to decompose the boundary conditions
  (component-wise or normal/tangent)
- [X] Non-linear method

* base/mesh [1/2]
- [X] Structured Grid
- [ ] Lattice     

* base/sfun [1/3]
- [X] B-Splines <degree, alpha>  with regularity 
- [ ] Inf-sup stable elements: bubbles (?)
- [ ] Spline variants

* base/time [0/2]
- [ ] Mass lumping and Adams-Bashforth methods
- [ ] HHT Time stepper + DOF with velocity and acceleration

* base/dof [0/2]
- [ ] deep copy of degrees of freedom
- [ ] deep field copy

* solid [0/0]

* fluid [0/1]
- [ ] Stokes stabilisation

* mat [0/3]
- [ ] Hyper-Elastic material based on Energy with invariants only
- [ ] Test Ogden material
- [ ] Is it possible to compute stretches from invariants? 

* reference [0/3]
- [ ] tutorial docu
- [ ] test app for incompressible material
- [ ] test apps with compilability and reference results

* beauty
- [ ] replace all ASCII graphics by proper png files
- [ ] base/io/tikz/Writer which generates a tex file with a
  tikzpicture of the mesh

* other [4/4]
- [X] Level Set Tool
- [X] Linear poro elasticity
- [X] Poro elasticity with coupled advection diffusion equation
- [X] Let smf2smf remove orphaned nodes (using a vertex iterator)

* cleanup [1/2]
- [ ] remove .cols(), .rows(), .col(), .row(), .tail() and .head()
  functions from code and put equivalent functions into
  base::linearAlgebra --> seperate the code more from Eigen
  functionality
- [X] replace ITER::value_type by iterator_traits<ITER>::value_type
  --> allow for e.g. boost::array<value_type>::iterator which is a
  pure pointer
